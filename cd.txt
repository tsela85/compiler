(cd "C:/Users/Zizi/compiler")

for(i=0; i<|params|; i++){
R0[1][0][i]=param;

void print_stack(char* comment){
	int i;
	printf("printing stack, FP: %d SP: %d %\n", (int)(FP), (int)(SP), comment);
	for(i=SP+5; i>=0; --i){
	if(SP == i){
		printf("SP");
	}
	if(FP == i){
		printf("FP");
	}
	printf("\t element %d: ", i);
	SHOW(" ", STACK(i));
	}
}
void print_heap(){
	int i;
	printf("printing heap\n");
	for (i=ADDR(0); i>=0; i--){
		printf("\t element %d: ", i);
	SHOW(" ",ADDR(i));
	}
}

(load "codegen.scm")
> (compile '((lambda (x) (if x 9 6)) #f))
> (compile '((lambda (x y z) (if x y z)) #f 7 8))
> (compile '((lambda (x y z) (if x y z)) #t ((lambda (i) i) 7) 8))
> (load "codegen.scm")
> (compile '((lambda (x y z) (if x y z)) #t ((lambda (i) i) 7) 8))
> (compile '((lambda (x y z) (if x y z)) ((lambda (m n) n) #t #f) ((lambda (i) i) 7) 8))
> (compile '((lambda (x y z) (if x y z)) ((lambda (m n) m) #t #f) ((lambda (i) i) 7) 8))
> (compile '((lambda (x y z) (if x y z)) ((lambda (m n) m) ((lambda(x) x) #t) #f) ((lambda (i) i) 7) 8))
> (compile '((lambda (x y z) (if x y z)) ((lambda (m n) m) ((lambda(x) x) (if 3 4 5) #f) ((lambda (i) i) 7) 8)))
> (compile '((lambda (x y z) (if x y z)) ((lambda (m n) m) ((lambda(x) x) (if 3 4 5)) #f) ((lambda (i) i) 7) 8))